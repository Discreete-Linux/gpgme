libgpgmepp.so.6 libgpgmepp6 #MINVER#
 (c++)"GpgME::EngineInfo::EngineInfo(_gpgme_engine_info*)@Base" 1.7.0
 (c++)"GpgME::EngineInfo::EngineInfo()@Base" 1.7.0
 (c++)"GpgME::EngineInfo::EngineInfo(_gpgme_engine_info*)@Base" 1.7.0
 (c++)"GpgME::EngineInfo::EngineInfo()@Base" 1.7.0
 (c++)"GpgME::engineInfo(GpgME::Engine)@Base" 1.7.0
 (c++)"GpgME::engineInfo(GpgME::Protocol)@Base" 1.7.0
 (c++)"GpgME::hasFeature(unsigned long)@Base" 1.7.0
 (c++)"GpgME::hasFeature(unsigned long, unsigned long)@Base" 1.7.0
 (c++)"GpgME::verify_uid(std::shared_ptr<_gpgme_key> const&, _gpgme_user_id*)@Base" 1.7.0
 (c++)"GpgME::checkEngine(GpgME::Engine)@Base" 1.7.0
 (c++)"GpgME::checkEngine(GpgME::Protocol)@Base" 1.7.0
 (c++)"GpgME::find_subkey(std::shared_ptr<_gpgme_key> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::ImportResult::init(gpgme_context*)@Base" 1.7.0
 (c++)"GpgME::ImportResult::ImportResult(gpgme_context*, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::ImportResult::ImportResult(gpgme_context*, int)@Base" 1.7.0
 (c++)"GpgME::ImportResult::ImportResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::ImportResult::ImportResult()@Base" 1.7.0
 (c++)"GpgME::ImportResult::ImportResult(gpgme_context*, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::ImportResult::ImportResult(gpgme_context*, int)@Base" 1.7.0
 (c++)"GpgME::ImportResult::ImportResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::ImportResult::ImportResult()@Base" 1.7.0
 (c++)"GpgME::getQIODevice(int)@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::setNewValue(GpgME::Configuration::Argument const&)@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::resetToActiveValue()@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::resetToDefaultValue()@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::__safe_bool_dummy__::nonnull()@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::Argument(GpgME::Configuration::Argument const&)@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::Argument(std::shared_ptr<gpgme_conf_comp> const&, gpgme_conf_opt*, gpgme_conf_arg*, bool)@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::Argument(GpgME::Configuration::Argument const&)@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::Argument(std::shared_ptr<gpgme_conf_comp> const&, gpgme_conf_opt*, gpgme_conf_arg*, bool)@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::~Argument()@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::~Argument()@Base" 1.7.0
 (c++)"GpgME::Configuration::Component::load(GpgME::Error&)@Base" 1.7.0
 (c++)"GpgME::Configuration::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Configuration::Flag)@Base" 1.7.0
 (c++)"GpgME::Configuration::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Configuration::Type)@Base" 1.7.0
 (c++)"GpgME::Configuration::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Configuration::Level)@Base" 1.7.0
 (c++)"GpgME::Configuration::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Configuration::Option const&)@Base" 1.7.0
 (c++)"GpgME::Configuration::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Configuration::Argument const&)@Base" 1.7.0
 (c++)"GpgME::Configuration::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Configuration::Component const&)@Base" 1.7.0
 (c++)"GpgME::KeyListResult::init(gpgme_context*)@Base" 1.7.0
 (c++)"GpgME::KeyListResult::detach()@Base" 1.7.0
 (c++)"GpgME::KeyListResult::mergeWith(GpgME::KeyListResult const&)@Base" 1.7.0
 (c++)"GpgME::KeyListResult::KeyListResult(gpgme_context*, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::KeyListResult::KeyListResult(gpgme_context*, int)@Base" 1.7.0
 (c++)"GpgME::KeyListResult::KeyListResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::KeyListResult::KeyListResult(GpgME::Error const&, _gpgme_op_keylist_result const&)@Base" 1.7.0
 (c++)"GpgME::KeyListResult::KeyListResult()@Base" 1.7.0
 (c++)"GpgME::KeyListResult::KeyListResult(gpgme_context*, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::KeyListResult::KeyListResult(gpgme_context*, int)@Base" 1.7.0
 (c++)"GpgME::KeyListResult::KeyListResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::KeyListResult::KeyListResult(GpgME::Error const&, _gpgme_op_keylist_result const&)@Base" 1.7.0
 (c++)"GpgME::KeyListResult::KeyListResult()@Base" 1.7.0
 (c++)"GpgME::SigningResult::init(gpgme_context*)@Base" 1.7.0
 (c++)"GpgME::SigningResult::SigningResult(gpgme_context*, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::SigningResult::SigningResult(gpgme_context*, int)@Base" 1.7.0
 (c++)"GpgME::SigningResult::SigningResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::SigningResult::SigningResult()@Base" 1.7.0
 (c++)"GpgME::SigningResult::SigningResult(gpgme_context*, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::SigningResult::SigningResult(gpgme_context*, int)@Base" 1.7.0
 (c++)"GpgME::SigningResult::SigningResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::SigningResult::SigningResult()@Base" 1.7.0
 (c++)"GpgME::SigningResult::~SigningResult()@Base" 1.7.0
 (c++)"GpgME::SigningResult::~SigningResult()@Base" 1.7.0
 (c++)"GpgME::getGIOChannel(int)@Base" 1.7.0
 (c++)"GpgME::verify_subkey(std::shared_ptr<_gpgme_key> const&, _gpgme_subkey*)@Base" 1.7.0
 (c++)"GpgME::EditInteractor::setDebugChannel(_IO_FILE*)@Base" 1.7.0
 (c++)"GpgME::EditInteractor::Private::Private(GpgME::EditInteractor*)@Base" 1.7.0
 (c++)"GpgME::EditInteractor::Private::Private(GpgME::EditInteractor*)@Base" 1.7.0
 (c++)"GpgME::EditInteractor::Private::~Private()@Base" 1.7.0
 (c++)"GpgME::EditInteractor::Private::~Private()@Base" 1.7.0
 (c++)"GpgME::EditInteractor::EditInteractor()@Base" 1.7.0
 (c++)"GpgME::EditInteractor::EditInteractor()@Base" 1.7.0
 (c++)"GpgME::EditInteractor::~EditInteractor()@Base" 1.7.0
 (c++)"GpgME::EditInteractor::~EditInteractor()@Base" 1.7.0
 (c++)"GpgME::EditInteractor::~EditInteractor()@Base" 1.7.0
 (c++)"GpgME::VfsMountResult::init(gpgme_context*)@Base" 1.7.0
 (c++)"GpgME::VfsMountResult::VfsMountResult(gpgme_context*, GpgME::Error const&, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::VfsMountResult::VfsMountResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::VfsMountResult::VfsMountResult()@Base" 1.7.0
 (c++)"GpgME::VfsMountResult::VfsMountResult(gpgme_context*, GpgME::Error const&, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::VfsMountResult::VfsMountResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::VfsMountResult::VfsMountResult()@Base" 1.7.0
 (c++)"GpgME::find_signature(_gpgme_user_id*, unsigned int)@Base" 1.7.0
 (c++)"GpgME::CreatedSignature::CreatedSignature(std::shared_ptr<GpgME::SigningResult::Private> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::CreatedSignature::CreatedSignature()@Base" 1.7.0
 (c++)"GpgME::CreatedSignature::CreatedSignature(std::shared_ptr<GpgME::SigningResult::Private> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::CreatedSignature::CreatedSignature()@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::init(gpgme_context*)@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::Recipient::Recipient(_gpgme_recipient*)@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::Recipient::Recipient()@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::Recipient::Recipient(_gpgme_recipient*)@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::Recipient::Recipient()@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::DecryptionResult(gpgme_context*, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::DecryptionResult(gpgme_context*, int)@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::DecryptionResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::DecryptionResult()@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::DecryptionResult(gpgme_context*, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::DecryptionResult(gpgme_context*, int)@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::DecryptionResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::DecryptionResult()@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::~DecryptionResult()@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::~DecryptionResult()@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::init(gpgme_context*)@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::EncryptionResult(gpgme_context*, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::EncryptionResult(gpgme_context*, int)@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::EncryptionResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::EncryptionResult()@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::EncryptionResult(gpgme_context*, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::EncryptionResult(gpgme_context*, int)@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::EncryptionResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::EncryptionResult()@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::~EncryptionResult()@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::~EncryptionResult()@Base" 1.7.0
 (c++)"GpgME::InvalidRecipient::InvalidRecipient(std::shared_ptr<GpgME::EncryptionResult::Private> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::InvalidRecipient::InvalidRecipient()@Base" 1.7.0
 (c++)"GpgME::InvalidRecipient::InvalidRecipient(std::shared_ptr<GpgME::EncryptionResult::Private> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::InvalidRecipient::InvalidRecipient()@Base" 1.7.0
 (c++)"GpgME::setDefaultLocale(int, char const*)@Base" 1.7.0
 (c++)"GpgME::verify_signature(_gpgme_user_id*, _gpgme_key_sig*)@Base" 1.7.0
 (c++)"GpgME::InvalidSigningKey::InvalidSigningKey(std::shared_ptr<GpgME::SigningResult::Private> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::InvalidSigningKey::InvalidSigningKey()@Base" 1.7.0
 (c++)"GpgME::InvalidSigningKey::InvalidSigningKey(std::shared_ptr<GpgME::SigningResult::Private> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::InvalidSigningKey::InvalidSigningKey()@Base" 1.7.0
 (c++)"GpgME::initializeLibrary(int)@Base" 1.7.0
 (c++)"GpgME::initializeLibrary()@Base" 1.7.0
 (c++)"GpgME::to_auditlog_flags(unsigned int)@Base" 1.7.0
 (c++)"GpgME::VerificationResult::init(gpgme_context*)@Base" 1.7.0
 (c++)"GpgME::VerificationResult::Private::~Private()@Base" 1.7.0
 (c++)"GpgME::VerificationResult::Private::~Private()@Base" 1.7.0
 (c++)"GpgME::VerificationResult::VerificationResult(gpgme_context*, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::VerificationResult::VerificationResult(gpgme_context*, int)@Base" 1.7.0
 (c++)"GpgME::VerificationResult::VerificationResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::VerificationResult::VerificationResult()@Base" 1.7.0
 (c++)"GpgME::VerificationResult::VerificationResult(gpgme_context*, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::VerificationResult::VerificationResult(gpgme_context*, int)@Base" 1.7.0
 (c++)"GpgME::VerificationResult::VerificationResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::VerificationResult::VerificationResult()@Base" 1.7.0
 (c++)"GpgME::VerificationResult::~VerificationResult()@Base" 1.7.0
 (c++)"GpgME::VerificationResult::~VerificationResult()@Base" 1.7.0
 (c++)"GpgME::EventLoopInteractor::actOn(int, GpgME::EventLoopInteractor::Direction)@Base" 1.7.0
 (c++)"GpgME::EventLoopInteractor::mSelf@Base" 1.7.0
 (c++)"GpgME::EventLoopInteractor::manage(GpgME::Context*)@Base" 1.7.0
 (c++)"GpgME::EventLoopInteractor::Private::removeIOCb(void*)@Base" 1.7.0
 (c++)"GpgME::EventLoopInteractor::Private::registerIOCb(void*, int, int, unsigned int (*)(void*, int), void*, void**)@Base" 1.7.0
 (c++)"GpgME::EventLoopInteractor::Private::iocbs@Base" 1.7.0
 (c++)"GpgME::EventLoopInteractor::Private::eventIOCb(void*, gpgme_event_io_t, void*)@Base" 1.7.0
 (c++)"GpgME::EventLoopInteractor::unmanage(GpgME::Context*)@Base" 1.7.0
 (c++)"GpgME::EventLoopInteractor::EventLoopInteractor()@Base" 1.7.0
 (c++)"GpgME::EventLoopInteractor::EventLoopInteractor()@Base" 1.7.0
 (c++)"GpgME::EventLoopInteractor::~EventLoopInteractor()@Base" 1.7.0
 (c++)"GpgME::EventLoopInteractor::~EventLoopInteractor()@Base" 1.7.0
 (c++)"GpgME::EventLoopInteractor::~EventLoopInteractor()@Base" 1.7.0
 (c++)"GpgME::KeyGenerationResult::init(gpgme_context*)@Base" 1.7.0
 (c++)"GpgME::KeyGenerationResult::KeyGenerationResult(gpgme_context*, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::KeyGenerationResult::KeyGenerationResult(gpgme_context*, int)@Base" 1.7.0
 (c++)"GpgME::KeyGenerationResult::KeyGenerationResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::KeyGenerationResult::KeyGenerationResult()@Base" 1.7.0
 (c++)"GpgME::KeyGenerationResult::KeyGenerationResult(gpgme_context*, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::KeyGenerationResult::KeyGenerationResult(gpgme_context*, int)@Base" 1.7.0
 (c++)"GpgME::KeyGenerationResult::KeyGenerationResult(GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::KeyGenerationResult::KeyGenerationResult()@Base" 1.7.0
 (c++)"GpgME::data_provider_callbacks@Base" 1.7.0
 (c++)"GpgME::DefaultAssuanTransaction::data(char const*, unsigned long)@Base" 1.7.0
 (c++)"GpgME::DefaultAssuanTransaction::status(char const*, char const*)@Base" 1.7.0
 (c++)"GpgME::DefaultAssuanTransaction::inquire(char const*, char const*, GpgME::Error&)@Base" 1.7.0
 (c++)"GpgME::DefaultAssuanTransaction::DefaultAssuanTransaction()@Base" 1.7.0
 (c++)"GpgME::DefaultAssuanTransaction::DefaultAssuanTransaction()@Base" 1.7.0
 (c++)"GpgME::DefaultAssuanTransaction::~DefaultAssuanTransaction()@Base" 1.7.0
 (c++)"GpgME::DefaultAssuanTransaction::~DefaultAssuanTransaction()@Base" 1.7.0
 (c++)"GpgME::DefaultAssuanTransaction::~DefaultAssuanTransaction()@Base" 1.7.0
 (c++)"GpgME::GpgSignKeyEditInteractor::setCheckLevel(unsigned int)@Base" 1.7.0
 (c++)"GpgME::GpgSignKeyEditInteractor::setUserIDsToSign(std::vector<unsigned int, std::allocator<unsigned int> > const&)@Base" 1.7.0
 (c++)"GpgME::GpgSignKeyEditInteractor::setSigningOptions(int)@Base" 1.7.0
 (c++)"GpgME::GpgSignKeyEditInteractor::Private::Private()@Base" 1.7.0
 (c++)"GpgME::GpgSignKeyEditInteractor::Private::Private()@Base" 1.7.0
 (c++)"GpgME::GpgSignKeyEditInteractor::GpgSignKeyEditInteractor()@Base" 1.7.0
 (c++)"GpgME::GpgSignKeyEditInteractor::GpgSignKeyEditInteractor()@Base" 1.7.0
 (c++)"GpgME::GpgSignKeyEditInteractor::~GpgSignKeyEditInteractor()@Base" 1.7.0
 (c++)"GpgME::GpgSignKeyEditInteractor::~GpgSignKeyEditInteractor()@Base" 1.7.0
 (c++)"GpgME::GpgSignKeyEditInteractor::~GpgSignKeyEditInteractor()@Base" 1.7.0
 (c++)"GpgME::edit_interactor_callback@Base" 1.7.0
 (c++)"GpgME::GpgAddUserIDEditInteractor::setNameUtf8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 1.7.0
 (c++)"GpgME::GpgAddUserIDEditInteractor::setEmailUtf8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 1.7.0
 (c++)"GpgME::GpgAddUserIDEditInteractor::setCommentUtf8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 1.7.0
 (c++)"GpgME::GpgAddUserIDEditInteractor::GpgAddUserIDEditInteractor()@Base" 1.7.0
 (c++)"GpgME::GpgAddUserIDEditInteractor::GpgAddUserIDEditInteractor()@Base" 1.7.0
 (c++)"GpgME::GpgAddUserIDEditInteractor::~GpgAddUserIDEditInteractor()@Base" 1.7.0
 (c++)"GpgME::GpgAddUserIDEditInteractor::~GpgAddUserIDEditInteractor()@Base" 1.7.0
 (c++)"GpgME::GpgAddUserIDEditInteractor::~GpgAddUserIDEditInteractor()@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::data(char const*, unsigned long)@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::status(char const*, char const*)@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::inquire(char const*, char const*, GpgME::Error&)@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::ScdGetInfoAssuanTransaction(GpgME::ScdGetInfoAssuanTransaction::InfoItem)@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::ScdGetInfoAssuanTransaction(GpgME::ScdGetInfoAssuanTransaction::InfoItem)@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::~ScdGetInfoAssuanTransaction()@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::~ScdGetInfoAssuanTransaction()@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::~ScdGetInfoAssuanTransaction()@Base" 1.7.0
 (c++)"GpgME::GpgSetExpiryTimeEditInteractor::GpgSetExpiryTimeEditInteractor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 1.7.0
 (c++)"GpgME::GpgSetExpiryTimeEditInteractor::GpgSetExpiryTimeEditInteractor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 1.7.0
 (c++)"GpgME::GpgSetExpiryTimeEditInteractor::~GpgSetExpiryTimeEditInteractor()@Base" 1.7.0
 (c++)"GpgME::GpgSetExpiryTimeEditInteractor::~GpgSetExpiryTimeEditInteractor()@Base" 1.7.0
 (c++)"GpgME::GpgSetExpiryTimeEditInteractor::~GpgSetExpiryTimeEditInteractor()@Base" 1.7.0
 (c++)"GpgME::GpgSetOwnerTrustEditInteractor::GpgSetOwnerTrustEditInteractor(GpgME::Key::OwnerTrust)@Base" 1.7.0
 (c++)"GpgME::GpgSetOwnerTrustEditInteractor::GpgSetOwnerTrustEditInteractor(GpgME::Key::OwnerTrust)@Base" 1.7.0
 (c++)"GpgME::GpgSetOwnerTrustEditInteractor::~GpgSetOwnerTrustEditInteractor()@Base" 1.7.0
 (c++)"GpgME::GpgSetOwnerTrustEditInteractor::~GpgSetOwnerTrustEditInteractor()@Base" 1.7.0
 (c++)"GpgME::GpgSetOwnerTrustEditInteractor::~GpgSetOwnerTrustEditInteractor()@Base" 1.7.0
 (c++)"GpgME::GpgAgentGetInfoAssuanTransaction::data(char const*, unsigned long)@Base" 1.7.0
 (c++)"GpgME::GpgAgentGetInfoAssuanTransaction::status(char const*, char const*)@Base" 1.7.0
 (c++)"GpgME::GpgAgentGetInfoAssuanTransaction::inquire(char const*, char const*, GpgME::Error&)@Base" 1.7.0
 (c++)"GpgME::GpgAgentGetInfoAssuanTransaction::GpgAgentGetInfoAssuanTransaction(GpgME::GpgAgentGetInfoAssuanTransaction::InfoItem)@Base" 1.7.0
 (c++)"GpgME::GpgAgentGetInfoAssuanTransaction::GpgAgentGetInfoAssuanTransaction(GpgME::GpgAgentGetInfoAssuanTransaction::InfoItem)@Base" 1.7.0
 (c++)"GpgME::GpgAgentGetInfoAssuanTransaction::~GpgAgentGetInfoAssuanTransaction()@Base" 1.7.0
 (c++)"GpgME::GpgAgentGetInfoAssuanTransaction::~GpgAgentGetInfoAssuanTransaction()@Base" 1.7.0
 (c++)"GpgME::GpgAgentGetInfoAssuanTransaction::~GpgAgentGetInfoAssuanTransaction()@Base" 1.7.0
 (c++)"GpgME::Key::null@Base" 1.7.0
 (c++)"GpgME::Key::update()@Base" 1.7.0
 (c++)"GpgME::Key::mergeWith(GpgME::Key const&)@Base" 1.7.0
 (c++)"GpgME::Key::Key(_gpgme_key*, bool)@Base" 1.7.0
 (c++)"GpgME::Key::Key(GpgME::Key::Null const&)@Base" 1.7.0
 (c++)"GpgME::Key::Key(std::shared_ptr<_gpgme_key> const&)@Base" 1.7.0
 (c++)"GpgME::Key::Key()@Base" 1.7.0
 (c++)"GpgME::Key::Key(_gpgme_key*, bool)@Base" 1.7.0
 (c++)"GpgME::Key::Key(GpgME::Key::Null const&)@Base" 1.7.0
 (c++)"GpgME::Key::Key(std::shared_ptr<_gpgme_key> const&)@Base" 1.7.0
 (c++)"GpgME::Key::Key()@Base" 1.7.0
 (c++)"GpgME::Data::setEncoding(GpgME::Data::Encoding)@Base" 1.7.0
 (c++)"GpgME::Data::setFileName(char const*)@Base" 1.7.0
 (c++)"GpgME::Data::null@Base" 1.7.0
 (c++)"GpgME::Data::read(void*, unsigned long)@Base" 1.7.0
 (c++)"GpgME::Data::seek(long, int)@Base" 1.7.0
 (c++)"GpgME::Data::write(void const*, unsigned long)@Base" 1.7.0
 (c++)"GpgME::Data::Private::~Private()@Base" 1.7.0
 (c++)"GpgME::Data::Private::~Private()@Base" 1.7.0
 (c++)"GpgME::Data::Data(gpgme_data*)@Base" 1.7.0
 (c++)"GpgME::Data::Data(_IO_FILE*)@Base" 1.7.0
 (c++)"GpgME::Data::Data(_IO_FILE*, long, unsigned long)@Base" 1.7.0
 (c++)"GpgME::Data::Data(char const*)@Base" 1.7.0
 (c++)"GpgME::Data::Data(char const*, long, unsigned long)@Base" 1.7.0
 (c++)"GpgME::Data::Data(char const*, unsigned long, bool)@Base" 1.7.0
 (c++)"GpgME::Data::Data(GpgME::DataProvider*)@Base" 1.7.0
 (c++)"GpgME::Data::Data(GpgME::Data::Null const&)@Base" 1.7.0
 (c++)"GpgME::Data::Data(int)@Base" 1.7.0
 (c++)"GpgME::Data::Data()@Base" 1.7.0
 (c++)"GpgME::Data::Data(gpgme_data*)@Base" 1.7.0
 (c++)"GpgME::Data::Data(_IO_FILE*)@Base" 1.7.0
 (c++)"GpgME::Data::Data(_IO_FILE*, long, unsigned long)@Base" 1.7.0
 (c++)"GpgME::Data::Data(char const*)@Base" 1.7.0
 (c++)"GpgME::Data::Data(char const*, long, unsigned long)@Base" 1.7.0
 (c++)"GpgME::Data::Data(char const*, unsigned long, bool)@Base" 1.7.0
 (c++)"GpgME::Data::Data(GpgME::DataProvider*)@Base" 1.7.0
 (c++)"GpgME::Data::Data(GpgME::Data::Null const&)@Base" 1.7.0
 (c++)"GpgME::Data::Data(int)@Base" 1.7.0
 (c++)"GpgME::Data::Data()@Base" 1.7.0
 (c++)"GpgME::Error::hasSystemError()@Base" 1.7.0
 (c++)"GpgME::Error::setSystemError(gpg_err_code_t)@Base" 1.7.0
 (c++)"GpgME::Error::fromSystemError(unsigned int)@Base" 1.7.0
 (c++)"GpgME::Error::__safe_bool_dummy__::nonnull()@Base" 1.7.0
 (c++)"GpgME::Error::fromCode(unsigned int, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Error::setErrno(int)@Base" 1.7.0
 (c++)"GpgME::Error::fromErrno(int, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Error::~Error()@Base" 1.7.0
 (c++)"GpgME::Error::~Error()@Base" 1.7.0
 (c++)"GpgME::Import::Import(std::shared_ptr<GpgME::ImportResult::Private> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Import::Import()@Base" 1.7.0
 (c++)"GpgME::Import::Import(std::shared_ptr<GpgME::ImportResult::Private> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Import::Import()@Base" 1.7.0
 (c++)"GpgME::Subkey::publicKeyAlgorithmAsString(GpgME::Subkey::PubkeyAlgo)@Base" 1.7.0
 (c++)"GpgME::Subkey::Subkey(std::shared_ptr<_gpgme_key> const&, _gpgme_subkey*)@Base" 1.7.0
 (c++)"GpgME::Subkey::Subkey(std::shared_ptr<_gpgme_key> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Subkey::Subkey()@Base" 1.7.0
 (c++)"GpgME::Subkey::Subkey(std::shared_ptr<_gpgme_key> const&, _gpgme_subkey*)@Base" 1.7.0
 (c++)"GpgME::Subkey::Subkey(std::shared_ptr<_gpgme_key> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Subkey::Subkey()@Base" 1.7.0
 (c++)"GpgME::UserID::addrSpecFromString[abi:cxx11](char const*)@Base" 1.7.1
 (c++)"GpgME::UserID::Signature::Signature(std::shared_ptr<_gpgme_key> const&, _gpgme_user_id*, _gpgme_key_sig*)@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::Signature(std::shared_ptr<_gpgme_key> const&, _gpgme_user_id*, unsigned int)@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::Signature()@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::Signature(std::shared_ptr<_gpgme_key> const&, _gpgme_user_id*, _gpgme_key_sig*)@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::Signature(std::shared_ptr<_gpgme_key> const&, _gpgme_user_id*, unsigned int)@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::Signature()@Base" 1.7.0
 (c++)"GpgME::UserID::UserID(std::shared_ptr<_gpgme_key> const&, _gpgme_user_id*)@Base" 1.7.0
 (c++)"GpgME::UserID::UserID(std::shared_ptr<_gpgme_key> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::UserID::UserID()@Base" 1.7.0
 (c++)"GpgME::UserID::UserID(std::shared_ptr<_gpgme_key> const&, _gpgme_user_id*)@Base" 1.7.0
 (c++)"GpgME::UserID::UserID(std::shared_ptr<_gpgme_key> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::UserID::UserID()@Base" 1.7.0
 (c++)"GpgME::Context::importKeys(GpgME::Data const&)@Base" 1.7.0
 (c++)"GpgME::Context::importKeys(std::vector<GpgME::Key, std::allocator<GpgME::Key> > const&)@Base" 1.7.0
 (c++)"GpgME::Context::setOffline(bool)@Base" 1.7.0
 (c++)"GpgME::Context::spawnAsync(char const*, char const**, GpgME::Data&, GpgME::Data&, GpgME::Data&, GpgME::Context::SpawnFlags)@Base" 1.7.0
 (c++)"GpgME::Context::generateKey(char const*, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::getAuditLog(GpgME::Data&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Context::setTextMode(bool)@Base" 1.7.0
 (c++)"GpgME::Context::startPasswd(GpgME::Key const&)@Base" 1.7.0
 (c++)"GpgME::Context::startEditing(GpgME::Key const&, std::unique_ptr<GpgME::EditInteractor, std::default_delete<GpgME::EditInteractor> >, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::startSigning(GpgME::Data const&, GpgME::Data&, GpgME::SignatureMode)@Base" 1.7.0
 (c++)"GpgME::Context::addSigningKey(GpgME::Key const&)@Base" 1.7.0
 (c++)"GpgME::Context::endKeyListing()@Base" 1.7.0
 (c++)"GpgME::Context::nextTrustItem(GpgME::Error&)@Base" 1.7.0
 (c++)"GpgME::Context::setTofuPolicy(GpgME::Key const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Context::addKeyListMode(unsigned int)@Base" 1.7.0
 (c++)"GpgME::Context::assuanTransact(char const*)@Base" 1.7.0
 (c++)"GpgME::Context::assuanTransact(char const*, std::unique_ptr<GpgME::AssuanTransaction, std::default_delete<GpgME::AssuanTransaction> >)@Base" 1.7.0
 (c++)"GpgME::Context::setKeyListMode(unsigned int)@Base" 1.7.0
 (c++)"GpgME::Context::signAndEncrypt(std::vector<GpgME::Key, std::allocator<GpgME::Key> > const&, GpgME::Data const&, GpgME::Data&, GpgME::Context::EncryptionFlags)@Base" 1.7.0
 (c++)"GpgME::Context::startKeyImport(GpgME::Data const&)@Base" 1.7.0
 (c++)"GpgME::Context::startKeyImport(std::vector<GpgME::Key, std::allocator<GpgME::Key> > const&)@Base" 1.7.0
 (c++)"GpgME::Context::createForEngine(GpgME::Engine, GpgME::Error*)@Base" 1.7.0
 (c++)"GpgME::Context::setPinentryMode(GpgME::Context::PinentryMode)@Base" 1.7.0
 (c++)"GpgME::Context::startDecryption(GpgME::Data const&, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::startEncryption(std::vector<GpgME::Key, std::allocator<GpgME::Key> > const&, GpgME::Data const&, GpgME::Data&, GpgME::Context::EncryptionFlags)@Base" 1.7.0
 (c++)"GpgME::Context::startKeyListing(char const*, bool)@Base" 1.7.0
 (c++)"GpgME::Context::startKeyListing(char const**, bool)@Base" 1.7.0
 (c++)"GpgME::Context::clearSigningKeys()@Base" 1.7.0
 (c++)"GpgME::Context::decryptAndVerify(GpgME::Data const&, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::exportPublicKeys(char const*, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::exportPublicKeys(char const**, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::startCardEditing(GpgME::Key const&, std::unique_ptr<GpgME::EditInteractor, std::default_delete<GpgME::EditInteractor> >, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::startGetAuditLog(GpgME::Data&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Context::startKeyDeletion(GpgME::Key const&, bool)@Base" 1.7.0
 (c++)"GpgME::Context::createForProtocol(GpgME::Protocol)@Base" 1.7.0
 (c++)"GpgME::Context::setEngineFileName(char const*)@Base" 1.7.0
 (c++)"GpgME::Context::installIOCallbacks(gpgme_io_cbs*)@Base" 1.7.0
 (c++)"GpgME::Context::setTofuPolicyStart(GpgME::Key const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Context::startKeyGeneration(char const*, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::endTrustItemListing()@Base" 1.7.0
 (c++)"GpgME::Context::setProgressProvider(GpgME::ProgressProvider*)@Base" 1.7.0
 (c++)"GpgME::Context::addSignatureNotation(char const*, char const*, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Context::encryptSymmetrically(GpgME::Data const&, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::startPublicKeyExport(char const*, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::startPublicKeyExport(char const**, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::uninstallIOCallbacks()@Base" 1.7.0
 (c++)"GpgME::Context::addSignaturePolicyURL(char const*, bool)@Base" 1.7.0
 (c++)"GpgME::Context::getKeysFromRecipients(std::vector<GpgME::Key, std::allocator<GpgME::Key> > const&)@Base" 1.7.0
 (c++)"GpgME::Context::setPassphraseProvider(GpgME::PassphraseProvider*)@Base" 1.7.0
 (c++)"GpgME::Context::startTrustItemListing(char const*, int)@Base" 1.7.0
 (c++)"GpgME::Context::verifyOpaqueSignature(GpgME::Data const&, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::cancelPendingOperation()@Base" 1.7.0
 (c++)"GpgME::Context::setEngineHomeDirectory(char const*)@Base" 1.7.0
 (c++)"GpgME::Context::setIncludeCertificates(int)@Base" 1.7.0
 (c++)"GpgME::Context::startAssuanTransaction(char const*)@Base" 1.7.0
 (c++)"GpgME::Context::startAssuanTransaction(char const*, std::unique_ptr<GpgME::AssuanTransaction, std::default_delete<GpgME::AssuanTransaction> >)@Base" 1.7.0
 (c++)"GpgME::Context::takeLastEditInteractor()@Base" 1.7.0
 (c++)"GpgME::Context::clearSignatureNotations()@Base" 1.7.0
 (c++)"GpgME::Context::verifyDetachedSignature(GpgME::Data const&, GpgME::Data const&)@Base" 1.7.0
 (c++)"GpgME::Context::takeLastAssuanTransaction()@Base" 1.7.0
 (c++)"GpgME::Context::takeLastCardEditInteractor()@Base" 1.7.0
 (c++)"GpgME::Context::setManagedByEventLoopInteractor(bool)@Base" 1.7.0
 (c++)"GpgME::Context::startOpaqueSignatureVerification(GpgME::Data const&, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::startCombinedSigningAndEncryption(std::vector<GpgME::Key, std::allocator<GpgME::Key> > const&, GpgME::Data const&, GpgME::Data&, GpgME::Context::EncryptionFlags)@Base" 1.7.0
 (c++)"GpgME::Context::startDetachedSignatureVerification(GpgME::Data const&, GpgME::Data const&)@Base" 1.7.0
 (c++)"GpgME::Context::startCombinedDecryptionAndVerification(GpgME::Data const&, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::key(char const*, GpgME::Error&, bool)@Base" 1.7.0
 (c++)"GpgME::Context::edit(GpgME::Key const&, std::unique_ptr<GpgME::EditInteractor, std::default_delete<GpgME::EditInteractor> >, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::poll()@Base" 1.7.0
 (c++)"GpgME::Context::sign(GpgME::Data const&, GpgME::Data&, GpgME::SignatureMode)@Base" 1.7.0
 (c++)"GpgME::Context::wait()@Base" 1.7.0
 (c++)"GpgME::Context::spawn(char const*, char const**, GpgME::Data&, GpgME::Data&, GpgME::Data&, GpgME::Context::SpawnFlags)@Base" 1.7.0
 (c++)"GpgME::Context::passwd(GpgME::Key const&)@Base" 1.7.0
 (c++)"GpgME::Context::Private::Private(gpgme_context*)@Base" 1.7.0
 (c++)"GpgME::Context::Private::Private(gpgme_context*)@Base" 1.7.0
 (c++)"GpgME::Context::Private::~Private()@Base" 1.7.0
 (c++)"GpgME::Context::Private::~Private()@Base" 1.7.0
 (c++)"GpgME::Context::decrypt(GpgME::Data const&, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::encrypt(std::vector<GpgME::Key, std::allocator<GpgME::Key> > const&, GpgME::Data const&, GpgME::Data&, GpgME::Context::EncryptionFlags)@Base" 1.7.0
 (c++)"GpgME::Context::nextKey(GpgME::Error&)@Base" 1.7.0
 (c++)"GpgME::Context::cardEdit(GpgME::Key const&, std::unique_ptr<GpgME::EditInteractor, std::default_delete<GpgME::EditInteractor> >, GpgME::Data&)@Base" 1.7.0
 (c++)"GpgME::Context::mountVFS(char const*, char const*)@Base" 1.7.0
 (c++)"GpgME::Context::setArmor(bool)@Base" 1.7.0
 (c++)"GpgME::Context::createVFS(char const*, std::vector<GpgME::Key, std::allocator<GpgME::Key> > const&)@Base" 1.7.0
 (c++)"GpgME::Context::deleteKey(GpgME::Key const&, bool)@Base" 1.7.0
 (c++)"GpgME::Context::setLocale(int, char const*)@Base" 1.7.0
 (c++)"GpgME::Context::Context(gpgme_context*)@Base" 1.7.0
 (c++)"GpgME::Context::Context(gpgme_context*)@Base" 1.7.0
 (c++)"GpgME::Context::~Context()@Base" 1.7.0
 (c++)"GpgME::Context::~Context()@Base" 1.7.0
 (c++)"GpgME::Context::~Context()@Base" 1.7.0
 (c++)"GpgME::dirInfo(char const*)@Base" 1.7.0
 (c++)"GpgME::Notation::Private::~Private()@Base" 1.7.0
 (c++)"GpgME::Notation::Private::~Private()@Base" 1.7.0
 (c++)"GpgME::Notation::Notation(_gpgme_sig_notation*)@Base" 1.7.0
 (c++)"GpgME::Notation::Notation(std::shared_ptr<GpgME::VerificationResult::Private> const&, unsigned int, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Notation::Notation()@Base" 1.7.0
 (c++)"GpgME::Notation::Notation(_gpgme_sig_notation*)@Base" 1.7.0
 (c++)"GpgME::Notation::Notation(std::shared_ptr<GpgME::VerificationResult::Private> const&, unsigned int, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Notation::Notation()@Base" 1.7.0
 (c++)"GpgME::TofuInfo::TofuInfo(_gpgme_tofu_info*)@Base" 1.7.0
 (c++)"GpgME::TofuInfo::TofuInfo()@Base" 1.7.0
 (c++)"GpgME::TofuInfo::TofuInfo(_gpgme_tofu_info*)@Base" 1.7.0
 (c++)"GpgME::TofuInfo::TofuInfo()@Base" 1.7.0
 (c++)"GpgME::find_uid(std::shared_ptr<_gpgme_key> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Exception::make_message(GpgME::Error const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 1.7.0
 (c++)"GpgME::Exception::make_message(GpgME::Error const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, GpgME::Exception::Options)@Base" 1.7.0
 (c++)"GpgME::Exception::~Exception()@Base" 1.7.0
 (c++)"GpgME::Exception::~Exception()@Base" 1.7.0
 (c++)"GpgME::Exception::~Exception()@Base" 1.7.0
 (c++)"GpgME::Signature::Signature(std::shared_ptr<GpgME::VerificationResult::Private> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Signature::Signature()@Base" 1.7.0
 (c++)"GpgME::Signature::Signature(std::shared_ptr<GpgME::VerificationResult::Private> const&, unsigned int)@Base" 1.7.0
 (c++)"GpgME::Signature::Signature()@Base" 1.7.0
 (c++)"GpgME::TrustItem::TrustItem(_gpgme_trust_item*)@Base" 1.7.0
 (c++)"GpgME::TrustItem::TrustItem(GpgME::TrustItem const&)@Base" 1.7.0
 (c++)"GpgME::TrustItem::TrustItem(_gpgme_trust_item*)@Base" 1.7.0
 (c++)"GpgME::TrustItem::TrustItem(GpgME::TrustItem const&)@Base" 1.7.0
 (c++)"GpgME::TrustItem::~TrustItem()@Base" 1.7.0
 (c++)"GpgME::TrustItem::~TrustItem()@Base" 1.7.0
 (c++)"GpgME::TrustItem::~TrustItem()@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::KeyListMode)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::SignatureMode)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Engine)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Context::AuditLogFlags)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Context::EncryptionFlags)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Context::CertificateInclusion)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Notation::Flags)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Protocol)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Signature::Summary)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Signature::PKAStatus)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::SigningResult const&)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::VfsMountResult const&)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::CreatedSignature const&)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::DecryptionResult::Recipient const&)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::DecryptionResult const&)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::EncryptionResult const&)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::InvalidRecipient const&)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::InvalidSigningKey const&)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::VerificationResult const&)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Key const&)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Error const&)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::UserID const&)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Notation const&)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::TofuInfo const&)@Base" 1.7.0
 (c++)"GpgME::operator<<(std::basic_ostream<char, std::char_traits<char> >&, GpgME::Signature const&)@Base" 1.7.0
 (c++|optional=templinst)"std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...)@Base" 1.7.0
 (c++)"GpgME::EngineInfo::engineVersion() const@Base" 1.7.0
 (c++)"GpgME::EngineInfo::homeDirectory() const@Base" 1.7.0
 (c++)"GpgME::EngineInfo::requiredVersion() const@Base" 1.7.0
 (c++)"GpgME::EngineInfo::isNull() const@Base" 1.7.0
 (c++)"GpgME::EngineInfo::version() const@Base" 1.7.0
 (c++)"GpgME::EngineInfo::fileName() const@Base" 1.7.0
 (c++)"GpgME::EngineInfo::protocol() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::newSubkeys() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::newUserIDs() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::notImported() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::numImported() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::numUnchanged() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::newSignatures() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::numConsidered() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::newRevocations() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::numRSAImported() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::numKeysWithoutUserID() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::numSecretKeysImported() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::numSecretKeysUnchanged() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::numSecretKeysConsidered() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::import(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::ImportResult::isNull() const@Base" 1.7.0
 (c++)"GpgME::ImportResult::imports() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::activeValue() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::description() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::argumentName() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::currentValue() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::defaultValue() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::alternateType() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::noArgumentValue() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::createIntArgument(int) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::createNoneArgument(bool) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::createUIntArgument(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::defaultDescription() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::createStringArgument(char const*) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::createStringArgument(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::createIntListArgument(std::vector<int, std::allocator<int> > const&) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::noArgumentDescription() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::createNoneListArgument(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::createUIntListArgument(std::vector<unsigned int, std::allocator<unsigned int> > const&) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::createStringListArgument(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::createStringListArgument(std::vector<char const*, std::allocator<char const*> > const&) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::set() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::name() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::type() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::dirty() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::flags() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::level() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::parent() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Option::newValue() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::uintValues() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::numElements() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::stringValue(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::stringValues() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::numberOfTimesSet() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::parent() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::intValue(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::boolValue() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::intValues() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Argument::uintValue(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Component::numOptions() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Component::description() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Component::programName() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Component::name() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Component::save() const@Base" 1.7.0
 (c++)"GpgME::Configuration::Component::option(char const*) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Component::option(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::Configuration::Component::options() const@Base" 1.7.0
 (c++)"GpgME::KeyListResult::isTruncated() const@Base" 1.7.0
 (c++)"GpgME::KeyListResult::isNull() const@Base" 1.7.0
 (c++)"GpgME::SigningResult::createdSignature(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::SigningResult::createdSignatures() const@Base" 1.7.0
 (c++)"GpgME::SigningResult::invalidSigningKey(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::SigningResult::invalidSigningKeys() const@Base" 1.7.0
 (c++)"GpgME::SigningResult::isNull() const@Base" 1.7.0
 (c++)"GpgME::EditInteractor::needsNoResponse(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::EditInteractor::state() const@Base" 1.7.0
 (c++)"GpgME::EditInteractor::lastError() const@Base" 1.7.0
 (c++)"GpgME::VfsMountResult::isNull() const@Base" 1.7.0
 (c++)"GpgME::VfsMountResult::mountDir() const@Base" 1.7.0
 (c++)"GpgME::CreatedSignature::fingerprint() const@Base" 1.7.0
 (c++)"GpgME::CreatedSignature::creationTime() const@Base" 1.7.0
 (c++)"GpgME::CreatedSignature::hashAlgorithm() const@Base" 1.7.0
 (c++)"GpgME::CreatedSignature::signatureClass() const@Base" 1.7.0
 (c++)"GpgME::CreatedSignature::publicKeyAlgorithm() const@Base" 1.7.0
 (c++)"GpgME::CreatedSignature::hashAlgorithmAsString() const@Base" 1.7.0
 (c++)"GpgME::CreatedSignature::publicKeyAlgorithmAsString() const@Base" 1.7.0
 (c++)"GpgME::CreatedSignature::mode() const@Base" 1.7.0
 (c++)"GpgME::CreatedSignature::isNull() const@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::recipients() const@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::numRecipients() const@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::isWrongKeyUsage() const@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::unsupportedAlgorithm() const@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::isNull() const@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::fileName() const@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::Recipient::shortKeyID() const@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::Recipient::publicKeyAlgorithm() const@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::Recipient::publicKeyAlgorithmAsString() const@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::Recipient::keyID() const@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::Recipient::isNull() const@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::Recipient::status() const@Base" 1.7.0
 (c++)"GpgME::DecryptionResult::recipient(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::invalidEncryptionKey(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::numInvalidRecipients() const@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::invalidEncryptionKeys() const@Base" 1.7.0
 (c++)"GpgME::EncryptionResult::isNull() const@Base" 1.7.0
 (c++)"GpgME::InvalidRecipient::fingerprint() const@Base" 1.7.0
 (c++)"GpgME::InvalidRecipient::isNull() const@Base" 1.7.0
 (c++)"GpgME::InvalidRecipient::reason() const@Base" 1.7.0
 (c++)"GpgME::InvalidSigningKey::fingerprint() const@Base" 1.7.0
 (c++)"GpgME::InvalidSigningKey::isNull() const@Base" 1.7.0
 (c++)"GpgME::InvalidSigningKey::reason() const@Base" 1.7.0
 (c++)"GpgME::VerificationResult::signatures() const@Base" 1.7.0
 (c++)"GpgME::VerificationResult::numSignatures() const@Base" 1.7.0
 (c++)"GpgME::VerificationResult::isNull() const@Base" 1.7.0
 (c++)"GpgME::VerificationResult::fileName() const@Base" 1.7.0
 (c++)"GpgME::VerificationResult::signature(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::KeyGenerationResult::fingerprint() const@Base" 1.7.0
 (c++)"GpgME::KeyGenerationResult::isSubkeyGenerated() const@Base" 1.7.0
 (c++)"GpgME::KeyGenerationResult::isPrimaryKeyGenerated() const@Base" 1.7.0
 (c++)"GpgME::KeyGenerationResult::isNull() const@Base" 1.7.0
 (c++)"GpgME::DefaultAssuanTransaction::statusLine[abi:cxx11](char const*) const@Base" 1.7.0
 (c++)"GpgME::DefaultAssuanTransaction::firstStatusLine[abi:cxx11](char const*) const@Base" 1.7.0
 (c++)"GpgME::GpgSignKeyEditInteractor::action(GpgME::Error&) const@Base" 1.7.0
 (c++)"GpgME::GpgSignKeyEditInteractor::nextState(unsigned int, char const*, GpgME::Error&) const@Base" 1.7.0
 (c++)"GpgME::GpgAddUserIDEditInteractor::action(GpgME::Error&) const@Base" 1.7.0
 (c++)"GpgME::GpgAddUserIDEditInteractor::nextState(unsigned int, char const*, GpgME::Error&) const@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::readerList[abi:cxx11]() const@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::socketName[abi:cxx11]() const@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::makeCommand() const@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::applicationList[abi:cxx11]() const@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::pid() const@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::status() const@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::command() const@Base" 1.7.0
 (c++)"GpgME::ScdGetInfoAssuanTransaction::version[abi:cxx11]() const@Base" 1.7.0
 (c++)"GpgME::GpgSetExpiryTimeEditInteractor::action(GpgME::Error&) const@Base" 1.7.0
 (c++)"GpgME::GpgSetExpiryTimeEditInteractor::nextState(unsigned int, char const*, GpgME::Error&) const@Base" 1.7.0
 (c++)"GpgME::GpgSetOwnerTrustEditInteractor::action(GpgME::Error&) const@Base" 1.7.0
 (c++)"GpgME::GpgSetOwnerTrustEditInteractor::nextState(unsigned int, char const*, GpgME::Error&) const@Base" 1.7.0
 (c++)"GpgME::GpgAgentGetInfoAssuanTransaction::socketName[abi:cxx11]() const@Base" 1.7.0
 (c++)"GpgME::GpgAgentGetInfoAssuanTransaction::makeCommand() const@Base" 1.7.0
 (c++)"GpgME::GpgAgentGetInfoAssuanTransaction::sshSocketName[abi:cxx11]() const@Base" 1.7.0
 (c++)"GpgME::GpgAgentGetInfoAssuanTransaction::pid() const@Base" 1.7.0
 (c++)"GpgME::GpgAgentGetInfoAssuanTransaction::command() const@Base" 1.7.0
 (c++)"GpgME::GpgAgentGetInfoAssuanTransaction::version[abi:cxx11]() const@Base" 1.7.0
 (c++)"GpgME::Key::canCertify() const@Base" 1.7.0
 (c++)"GpgME::Key::canEncrypt() const@Base" 1.7.0
 (c++)"GpgME::Key::isDisabled() const@Base" 1.7.0
 (c++)"GpgME::Key::issuerName() const@Base" 1.7.0
 (c++)"GpgME::Key::numSubkeys() const@Base" 1.7.0
 (c++)"GpgME::Key::numUserIDs() const@Base" 1.7.0
 (c++)"GpgME::Key::ownerTrust() const@Base" 1.7.0
 (c++)"GpgME::Key::shortKeyID() const@Base" 1.7.0
 (c++)"GpgME::Key::isQualified() const@Base" 1.7.0
 (c++)"GpgME::Key::keyListMode() const@Base" 1.7.0
 (c++)"GpgME::Key::issuerSerial() const@Base" 1.7.0
 (c++)"GpgME::Key::canReallySign() const@Base" 1.7.0
 (c++)"GpgME::Key::canAuthenticate() const@Base" 1.7.0
 (c++)"GpgME::Key::protocolAsString() const@Base" 1.7.0
 (c++)"GpgME::Key::ownerTrustAsString() const@Base" 1.7.0
 (c++)"GpgME::Key::primaryFingerprint() const@Base" 1.7.0
 (c++)"GpgME::Key::keyID() const@Base" 1.7.0
 (c++)"GpgME::Key::isRoot() const@Base" 1.7.0
 (c++)"GpgME::Key::subkey(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::Key::userID(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::Key::canSign() const@Base" 1.7.0
 (c++)"GpgME::Key::chainID() const@Base" 1.7.0
 (c++)"GpgME::Key::subkeys() const@Base" 1.7.0
 (c++)"GpgME::Key::userIDs() const@Base" 1.7.0
 (c++)"GpgME::Key::protocol() const@Base" 1.7.0
 (c++)"GpgME::Key::hasSecret() const@Base" 1.7.0
 (c++)"GpgME::Key::isExpired() const@Base" 1.7.0
 (c++)"GpgME::Key::isInvalid() const@Base" 1.7.0
 (c++)"GpgME::Key::isRevoked() const@Base" 1.7.0
 (c++)"GpgME::Data::type() const@Base" 1.7.0
 (c++)"GpgME::Data::isNull() const@Base" 1.7.0
 (c++)"GpgME::Data::encoding() const@Base" 1.7.0
 (c++)"GpgME::Data::fileName() const@Base" 1.7.0
 (c++)"GpgME::Error::isCanceled() const@Base" 1.7.0
 (c++)"GpgME::Error::code() const@Base" 1.7.0
 (c++)"GpgME::Error::source() const@Base" 1.7.0
 (c++)"GpgME::Error::toErrno() const@Base" 1.7.0
 (c++)"GpgME::Error::asString() const@Base" 1.7.0
 (c++)"GpgME::Error::sourceID() const@Base" 1.7.0
 (c++)"GpgME::Import::fingerprint() const@Base" 1.7.0
 (c++)"GpgME::Import::error() const@Base" 1.7.0
 (c++)"GpgME::Import::isNull() const@Base" 1.7.0
 (c++)"GpgME::Import::status() const@Base" 1.7.0
 (c++)"GpgME::Subkey::canCertify() const@Base" 1.7.0
 (c++)"GpgME::Subkey::canEncrypt() const@Base" 1.7.0
 (c++)"GpgME::Subkey::isDisabled() const@Base" 1.7.0
 (c++)"GpgME::Subkey::fingerprint() const@Base" 1.7.0
 (c++)"GpgME::Subkey::isQualified() const@Base" 1.7.0
 (c++)"GpgME::Subkey::creationTime() const@Base" 1.7.0
 (c++)"GpgME::Subkey::neverExpires() const@Base" 1.7.0
 (c++)"GpgME::Subkey::expirationTime() const@Base" 1.7.0
 (c++)"GpgME::Subkey::canAuthenticate() const@Base" 1.7.0
 (c++)"GpgME::Subkey::cardSerialNumber() const@Base" 1.7.0
 (c++)"GpgME::Subkey::publicKeyAlgorithm() const@Base" 1.7.0
 (c++)"GpgME::Subkey::publicKeyAlgorithmAsString() const@Base" 1.7.0
 (c++)"GpgME::Subkey::keyID() const@Base" 1.7.0
 (c++)"GpgME::Subkey::length() const@Base" 1.7.0
 (c++)"GpgME::Subkey::parent() const@Base" 1.7.0
 (c++)"GpgME::Subkey::canSign() const@Base" 1.7.0
 (c++)"GpgME::Subkey::algoName[abi:cxx11]() const@Base" 1.7.0
 (c++)"GpgME::Subkey::isSecret() const@Base" 1.7.0
 (c++)"GpgME::Subkey::isCardKey() const@Base" 1.7.0
 (c++)"GpgME::Subkey::isExpired() const@Base" 1.7.0
 (c++)"GpgME::Subkey::isInvalid() const@Base" 1.7.0
 (c++)"GpgME::Subkey::isRevoked() const@Base" 1.7.0
 (c++)"GpgME::UserID::signatures() const@Base" 1.7.0
 (c++)"GpgME::UserID::numSignatures() const@Base" 1.7.0
 (c++)"GpgME::UserID::validityAsString() const@Base" 1.7.0
 (c++)"GpgME::UserID::id() const@Base" 1.7.0
 (c++)"GpgME::UserID::name() const@Base" 1.7.0
 (c++)"GpgME::UserID::email() const@Base" 1.7.0
 (c++)"GpgME::UserID::parent() const@Base" 1.7.0
 (c++)"GpgME::UserID::comment() const@Base" 1.7.0
 (c++)"GpgME::UserID::addrSpec[abi:cxx11]() const@Base" 1.7.1
 (c++)"GpgME::UserID::tofuInfo() const@Base" 1.7.0
 (c++)"GpgME::UserID::validity() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::signerName() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::signerEmail() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::signerKeyID() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::creationTime() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::isExportable() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::isRevokation() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::neverExpires() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::numNotations() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::signerUserID() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::signerComment() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::expirationTime() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::statusAsString[abi:cxx11]() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::algorithmAsString() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::parent() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::status() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::notation(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::algorithm() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::certClass() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::isExpired() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::isInvalid() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::notations() const@Base" 1.7.0
 (c++)"GpgME::UserID::Signature::policyURL() const@Base" 1.7.0
 (c++)"GpgME::UserID::isInvalid() const@Base" 1.7.0
 (c++)"GpgME::UserID::isRevoked() const@Base" 1.7.0
 (c++)"GpgME::UserID::signature(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::Context::engineInfo() const@Base" 1.7.0
 (c++)"GpgME::Context::signingKey(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::Context::keyListMode() const@Base" 1.7.0
 (c++)"GpgME::Context::signingKeys() const@Base" 1.7.0
 (c++)"GpgME::Context::importResult() const@Base" 1.7.0
 (c++)"GpgME::Context::pinentryMode() const@Base" 1.7.0
 (c++)"GpgME::Context::keyListResult() const@Base" 1.7.0
 (c++)"GpgME::Context::signingResult() const@Base" 1.7.0
 (c++)"GpgME::Context::decryptionResult() const@Base" 1.7.0
 (c++)"GpgME::Context::encryptionResult() const@Base" 1.7.0
 (c++)"GpgME::Context::progressProvider() const@Base" 1.7.0
 (c++)"GpgME::Context::signatureNotation(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::Context::lastEditInteractor() const@Base" 1.7.0
 (c++)"GpgME::Context::passphraseProvider() const@Base" 1.7.0
 (c++)"GpgME::Context::signatureNotations() const@Base" 1.7.0
 (c++)"GpgME::Context::signaturePolicyURL() const@Base" 1.7.0
 (c++)"GpgME::Context::verificationResult() const@Base" 1.7.0
 (c++)"GpgME::Context::includeCertificates() const@Base" 1.7.0
 (c++)"GpgME::Context::keyGenerationResult() const@Base" 1.7.0
 (c++)"GpgME::Context::lastAssuanTransaction() const@Base" 1.7.0
 (c++)"GpgME::Context::lastCardEditInteractor() const@Base" 1.7.0
 (c++)"GpgME::Context::managedByEventLoopInteractor() const@Base" 1.7.0
 (c++)"GpgME::Context::armor() const@Base" 1.7.0
 (c++)"GpgME::Context::offline() const@Base" 1.7.0
 (c++)"GpgME::Context::protocol() const@Base" 1.7.0
 (c++)"GpgME::Context::textMode() const@Base" 1.7.0
 (c++)"GpgME::Context::lastError() const@Base" 1.7.0
 (c++)"GpgME::Notation::isCritical() const@Base" 1.7.0
 (c++)"GpgME::Notation::isHumanReadable() const@Base" 1.7.0
 (c++)"GpgME::Notation::name() const@Base" 1.7.0
 (c++)"GpgME::Notation::flags() const@Base" 1.7.0
 (c++)"GpgME::Notation::value() const@Base" 1.7.0
 (c++)"GpgME::Notation::isNull() const@Base" 1.7.0
 (c++)"GpgME::TofuInfo::description() const@Base" 1.7.0
 (c++)"GpgME::TofuInfo::isNull() const@Base" 1.7.0
 (c++)"GpgME::TofuInfo::policy() const@Base" 1.7.0
 (c++)"GpgME::TofuInfo::encrLast() const@Base" 1.7.0
 (c++)"GpgME::TofuInfo::signLast() const@Base" 1.7.0
 (c++)"GpgME::TofuInfo::validity() const@Base" 1.7.0
 (c++)"GpgME::TofuInfo::encrCount() const@Base" 1.7.0
 (c++)"GpgME::TofuInfo::encrFirst() const@Base" 1.7.0
 (c++)"GpgME::TofuInfo::signCount() const@Base" 1.7.0
 (c++)"GpgME::TofuInfo::signFirst() const@Base" 1.7.0
 (c++)"GpgME::Signature::pkaAddress() const@Base" 1.7.0
 (c++)"GpgME::Signature::fingerprint() const@Base" 1.7.0
 (c++)"GpgME::Signature::creationTime() const@Base" 1.7.0
 (c++)"GpgME::Signature::neverExpires() const@Base" 1.7.0
 (c++)"GpgME::Signature::hashAlgorithm() const@Base" 1.7.0
 (c++)"GpgME::Signature::expirationTime() const@Base" 1.7.0
 (c++)"GpgME::Signature::isWrongKeyUsage() const@Base" 1.7.0
 (c++)"GpgME::Signature::validityAsString() const@Base" 1.7.0
 (c++)"GpgME::Signature::nonValidityReason() const@Base" 1.7.0
 (c++)"GpgME::Signature::publicKeyAlgorithm() const@Base" 1.7.0
 (c++)"GpgME::Signature::hashAlgorithmAsString() const@Base" 1.7.0
 (c++)"GpgME::Signature::isVerifiedUsingChainModel() const@Base" 1.7.0
 (c++)"GpgME::Signature::publicKeyAlgorithmAsString() const@Base" 1.7.0
 (c++)"GpgME::Signature::key(bool, bool) const@Base" 1.7.1
 (c++)"GpgME::Signature::key() const@Base" 1.7.0
 (c++)"GpgME::Signature::isNull() const@Base" 1.7.0
 (c++)"GpgME::Signature::status() const@Base" 1.7.0
 (c++)"GpgME::Signature::summary() const@Base" 1.7.0
 (c++)"GpgME::Signature::notation(unsigned int) const@Base" 1.7.0
 (c++)"GpgME::Signature::validity() const@Base" 1.7.0
 (c++)"GpgME::Signature::notations() const@Base" 1.7.0
 (c++)"GpgME::Signature::pkaStatus() const@Base" 1.7.0
 (c++)"GpgME::Signature::policyURL() const@Base" 1.7.0
 (c++)"GpgME::TrustItem::trustLevel() const@Base" 1.7.0
 (c++)"GpgME::TrustItem::validityAsString() const@Base" 1.7.0
 (c++)"GpgME::TrustItem::ownerTrustAsString() const@Base" 1.7.0
 (c++)"GpgME::TrustItem::impl() const@Base" 1.7.0
 (c++)"GpgME::TrustItem::type() const@Base" 1.7.0
 (c++)"GpgME::TrustItem::keyID() const@Base" 1.7.0
 (c++)"GpgME::TrustItem::isNull() const@Base" 1.7.0
 (c++)"GpgME::TrustItem::userID() const@Base" 1.7.0
 (c++|optional=templinst)"std::ctype<char>::do_widen(char) const@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<decltype(nullptr), (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::EngineInfo::Private*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::EngineInfo::Private*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::EngineInfo::Private*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::EngineInfo::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::EngineInfo::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::EngineInfo::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::ImportResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::ImportResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::ImportResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::ImportResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::ImportResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::ImportResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::KeyListResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::KeyListResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::KeyListResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::KeyListResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::KeyListResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::KeyListResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::SigningResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::SigningResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::SigningResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::SigningResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::SigningResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::SigningResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::VfsMountResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::VfsMountResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::VfsMountResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::VfsMountResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::VfsMountResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::VfsMountResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::DecryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::DecryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::DecryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::DecryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::DecryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::DecryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::DecryptionResult::Recipient::Private*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::DecryptionResult::Recipient::Private*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::DecryptionResult::Recipient::Private*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::DecryptionResult::Recipient::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::DecryptionResult::Recipient::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::DecryptionResult::Recipient::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::EncryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::EncryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::EncryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::EncryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::EncryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::EncryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::VerificationResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::VerificationResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::VerificationResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::VerificationResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::VerificationResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::VerificationResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::KeyGenerationResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::KeyGenerationResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::KeyGenerationResult::Private*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::KeyGenerationResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::KeyGenerationResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::KeyGenerationResult::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::Data::Private*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::Data::Private*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::Data::Private*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::Data::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::Data::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::Data::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::Notation::Private*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::Notation::Private*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::Notation::Private*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::Notation::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::Notation::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::Notation::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::TofuInfo::Private*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::TofuInfo::Private*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::TofuInfo::Private*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::TofuInfo::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::TofuInfo::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_ptr<GpgME::TofuInfo::Private*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_weak_release()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<_gpgme_key*, void (*)(_gpgme_key*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<_gpgme_key*, void (*)(_gpgme_key*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<_gpgme_key*, void (*)(_gpgme_key*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<_gpgme_key*, void (*)(_gpgme_key*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<_gpgme_key*, void (*)(_gpgme_key*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<_gpgme_key*, void (*)(_gpgme_key*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<gpgme_context*, void (*)(gpgme_context*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<gpgme_context*, void (*)(gpgme_context*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<gpgme_context*, void (*)(gpgme_context*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<gpgme_context*, void (*)(gpgme_context*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<gpgme_context*, void (*)(gpgme_context*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<gpgme_context*, void (*)(gpgme_context*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<gpgme_conf_comp*, void (*)(gpgme_conf_comp*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<gpgme_conf_comp*, void (*)(gpgme_conf_comp*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<gpgme_conf_comp*, void (*)(gpgme_conf_comp*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<gpgme_conf_comp*, void (*)(gpgme_conf_comp*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<gpgme_conf_comp*, void (*)(gpgme_conf_comp*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()@Base" 1.7.0
 (c++|optional=templinst)"std::_Sp_counted_deleter<gpgme_conf_comp*, void (*)(gpgme_conf_comp*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_deleter()@Base" 1.7.0
 (c++|optional=templinst)"std::map<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, GpgSignKeyEditInteractor_Private::SignKeyState, std::less<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, GpgSignKeyEditInteractor_Private::SignKeyState> > >::~map()@Base" 1.7.0
 (c++|optional=templinst)"std::map<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, GpgSignKeyEditInteractor_Private::SignKeyState, std::less<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, GpgSignKeyEditInteractor_Private::SignKeyState> > >::~map()@Base" 1.7.0
 (c++|optional=templinst)"std::map<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, GpgSignKeyEditInteractor_Private::SignKeyState, std::less<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, GpgSignKeyEditInteractor_Private::SignKeyState> > >::operator[](std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&)@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<_gpgme_recipient, std::allocator<_gpgme_recipient> >::_M_emplace_back_aux<_gpgme_recipient const&>(_gpgme_recipient const&)@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<GpgME::Configuration::Option, std::allocator<GpgME::Configuration::Option> >::_M_emplace_back_aux<GpgME::Configuration::Option>(GpgME::Configuration::Option&&)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Configuration::Option, std::allocator<GpgME::Configuration::Option> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Configuration::Option, std::allocator<GpgME::Configuration::Option> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Configuration::Component, std::allocator<GpgME::Configuration::Component> >::_M_default_append(unsigned long)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Configuration::Component, std::allocator<GpgME::Configuration::Component> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Configuration::Component, std::allocator<GpgME::Configuration::Component> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<GpgME::CreatedSignature, std::allocator<GpgME::CreatedSignature> >::_M_emplace_back_aux<GpgME::CreatedSignature>(GpgME::CreatedSignature&&)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::CreatedSignature, std::allocator<GpgME::CreatedSignature> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::CreatedSignature, std::allocator<GpgME::CreatedSignature> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<GpgME::DecryptionResult::Recipient, std::allocator<GpgME::DecryptionResult::Recipient> >::_M_emplace_back_aux<GpgME::DecryptionResult::Recipient>(GpgME::DecryptionResult::Recipient&&)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::DecryptionResult::Recipient, std::allocator<GpgME::DecryptionResult::Recipient> >::reserve(unsigned long)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::DecryptionResult::Recipient, std::allocator<GpgME::DecryptionResult::Recipient> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::DecryptionResult::Recipient, std::allocator<GpgME::DecryptionResult::Recipient> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<GpgME::InvalidRecipient, std::allocator<GpgME::InvalidRecipient> >::_M_emplace_back_aux<GpgME::InvalidRecipient>(GpgME::InvalidRecipient&&)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::InvalidRecipient, std::allocator<GpgME::InvalidRecipient> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::InvalidRecipient, std::allocator<GpgME::InvalidRecipient> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<GpgME::InvalidSigningKey, std::allocator<GpgME::InvalidSigningKey> >::_M_emplace_back_aux<GpgME::InvalidSigningKey>(GpgME::InvalidSigningKey&&)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::InvalidSigningKey, std::allocator<GpgME::InvalidSigningKey> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::InvalidSigningKey, std::allocator<GpgME::InvalidSigningKey> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<GpgME::VerificationResult::Private::Nota, std::allocator<GpgME::VerificationResult::Private::Nota> >::_M_emplace_back_aux<GpgME::VerificationResult::Private::Nota const&>(GpgME::VerificationResult::Private::Nota const&)@Base" 1.7.0
 (c++)"void std::vector<GpgME::Key, std::allocator<GpgME::Key> >::emplace_back<GpgME::Key>(GpgME::Key&&)@Base" 1.7.1
 (c++|optional=templinst)"void std::vector<GpgME::Key, std::allocator<GpgME::Key> >::_M_emplace_back_aux<GpgME::Key>(GpgME::Key&&)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Key, std::allocator<GpgME::Key> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Key, std::allocator<GpgME::Key> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<GpgME::Import, std::allocator<GpgME::Import> >::_M_emplace_back_aux<GpgME::Import>(GpgME::Import&&)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Import, std::allocator<GpgME::Import> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Import, std::allocator<GpgME::Import> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<GpgME::Subkey, std::allocator<GpgME::Subkey> >::_M_emplace_back_aux<GpgME::Subkey>(GpgME::Subkey&&)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Subkey, std::allocator<GpgME::Subkey> >::reserve(unsigned long)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Subkey, std::allocator<GpgME::Subkey> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Subkey, std::allocator<GpgME::Subkey> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<GpgME::UserID::Signature, std::allocator<GpgME::UserID::Signature> >::_M_emplace_back_aux<GpgME::UserID::Signature>(GpgME::UserID::Signature&&)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::UserID::Signature, std::allocator<GpgME::UserID::Signature> >::reserve(unsigned long)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::UserID::Signature, std::allocator<GpgME::UserID::Signature> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::UserID::Signature, std::allocator<GpgME::UserID::Signature> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<GpgME::UserID, std::allocator<GpgME::UserID> >::_M_emplace_back_aux<GpgME::UserID>(GpgME::UserID&&)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::UserID, std::allocator<GpgME::UserID> >::reserve(unsigned long)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::UserID, std::allocator<GpgME::UserID> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::UserID, std::allocator<GpgME::UserID> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<GpgME::Notation, std::allocator<GpgME::Notation> >::_M_emplace_back_aux<GpgME::Notation>(GpgME::Notation&&)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Notation, std::allocator<GpgME::Notation> >::reserve(unsigned long)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Notation, std::allocator<GpgME::Notation> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Notation, std::allocator<GpgME::Notation> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<GpgME::Signature, std::allocator<GpgME::Signature> >::_M_emplace_back_aux<GpgME::Signature>(GpgME::Signature&&)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Signature, std::allocator<GpgME::Signature> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"std::vector<GpgME::Signature, std::allocator<GpgME::Signature> >::~vector()@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<_gpgme_signature*, std::allocator<_gpgme_signature*> >::_M_emplace_back_aux<_gpgme_signature* const&>(_gpgme_signature* const&)@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<_gpgme_invalid_key*, std::allocator<_gpgme_invalid_key*> >::_M_emplace_back_aux<_gpgme_invalid_key* const&>(_gpgme_invalid_key* const&)@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<_gpgme_import_status*, std::allocator<_gpgme_import_status*> >::_M_emplace_back_aux<_gpgme_import_status* const&>(_gpgme_import_status* const&)@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<_gpgme_new_signature*, std::allocator<_gpgme_new_signature*> >::_M_emplace_back_aux<_gpgme_new_signature* const&>(_gpgme_new_signature* const&)@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<char const*, std::allocator<char const*> >::emplace_back<char const*>(char const*&&)@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<char const*, std::allocator<char const*> >::_M_emplace_back_aux<char const*>(char const*&&)@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<GpgME::EventLoopInteractor::Private::OneFD*, std::allocator<GpgME::EventLoopInteractor::Private::OneFD*> >::_M_emplace_back_aux<GpgME::EventLoopInteractor::Private::OneFD*>(GpgME::EventLoopInteractor::Private::OneFD*&&)@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<char*, std::allocator<char*> >::_M_emplace_back_aux<char*>(char*&&)@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<std::vector<GpgME::VerificationResult::Private::Nota, std::allocator<GpgME::VerificationResult::Private::Nota> >, std::allocator<std::vector<GpgME::VerificationResult::Private::Nota, std::allocator<GpgME::VerificationResult::Private::Nota> > > >::_M_emplace_back_aux<std::vector<GpgME::VerificationResult::Private::Nota, std::allocator<GpgME::VerificationResult::Private::Nota> > >(std::vector<GpgME::VerificationResult::Private::Nota, std::allocator<GpgME::VerificationResult::Private::Nota> >&&)@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_emplace_back_aux<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&)@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int const&>(int const&)@Base" 1.7.0
 (c++|optional=templinst)"void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int const&>(unsigned int const&)@Base" 1.7.0
 (c++|optional=templinst)"std::vector<unsigned int, std::allocator<unsigned int> >::operator=(std::vector<unsigned int, std::allocator<unsigned int> > const&)@Base" 1.7.0
 (c++|optional=templinst)"std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()@Base" 1.7.0
 (c++|optional=templinst)"std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()@Base" 1.7.0
 (c++|optional=templinst)"std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()@Base" 1.7.0
 (c++|optional=templinst)"std::_Rb_tree<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, GpgSignKeyEditInteractor_Private::SignKeyState>, std::_Select1st<std::pair<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, GpgSignKeyEditInteractor_Private::SignKeyState> >, std::less<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, GpgSignKeyEditInteractor_Private::SignKeyState> > >::_M_get_insert_unique_pos(std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Rb_tree<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, GpgSignKeyEditInteractor_Private::SignKeyState>, std::_Select1st<std::pair<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, GpgSignKeyEditInteractor_Private::SignKeyState> >, std::less<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, GpgSignKeyEditInteractor_Private::SignKeyState> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, GpgSignKeyEditInteractor_Private::SignKeyState> >, std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)@Base" 1.7.0
 (c++|optional=templinst)"std::_Rb_tree<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, GpgSignKeyEditInteractor_Private::SignKeyState>, std::_Select1st<std::pair<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, GpgSignKeyEditInteractor_Private::SignKeyState> >, std::less<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, GpgSignKeyEditInteractor_Private::SignKeyState> > >::_M_erase(std::_Rb_tree_node<std::pair<std::tuple<GpgSignKeyEditInteractor_Private::SignKeyState, unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, GpgSignKeyEditInteractor_Private::SignKeyState> >*)@Base" 1.7.0
 (c++)"typeinfo for GpgME::EditInteractor@Base" 1.7.0
 (c++)"typeinfo for GpgME::AssuanTransaction@Base" 1.7.0
 (c++)"typeinfo for GpgME::EventLoopInteractor@Base" 1.7.0
 (c++)"typeinfo for GpgME::DefaultAssuanTransaction@Base" 1.7.0
 (c++)"typeinfo for GpgME::GpgSignKeyEditInteractor@Base" 1.7.0
 (c++)"typeinfo for GpgME::GpgAddUserIDEditInteractor@Base" 1.7.0
 (c++)"typeinfo for GpgME::ScdGetInfoAssuanTransaction@Base" 1.7.0
 (c++)"typeinfo for GpgME::GpgSetExpiryTimeEditInteractor@Base" 1.7.0
 (c++)"typeinfo for GpgME::GpgSetOwnerTrustEditInteractor@Base" 1.7.0
 (c++)"typeinfo for GpgME::GpgAgentGetInfoAssuanTransaction@Base" 1.7.0
 (c++)"typeinfo for GpgME::Context@Base" 1.7.0
 (c++)"typeinfo for GpgME::Exception@Base" 1.7.0
 (c++)"typeinfo for GpgME::TrustItem@Base" 1.7.0
 (c++)"typeinfo for std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_ptr<GpgME::EngineInfo::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_ptr<GpgME::ImportResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_ptr<GpgME::KeyListResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_ptr<GpgME::SigningResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_ptr<GpgME::VfsMountResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_ptr<GpgME::DecryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_ptr<GpgME::DecryptionResult::Recipient::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_ptr<GpgME::EncryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_ptr<GpgME::VerificationResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_ptr<GpgME::KeyGenerationResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_ptr<GpgME::Data::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_ptr<GpgME::Notation::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_ptr<GpgME::TofuInfo::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_deleter<_gpgme_key*, void (*)(_gpgme_key*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_deleter<gpgme_context*, void (*)(gpgme_context*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo for std::_Sp_counted_deleter<gpgme_conf_comp*, void (*)(gpgme_conf_comp*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for GpgME::EditInteractor@Base" 1.7.0
 (c++)"typeinfo name for GpgME::AssuanTransaction@Base" 1.7.0
 (c++)"typeinfo name for GpgME::EventLoopInteractor@Base" 1.7.0
 (c++)"typeinfo name for GpgME::DefaultAssuanTransaction@Base" 1.7.0
 (c++)"typeinfo name for GpgME::GpgSignKeyEditInteractor@Base" 1.7.0
 (c++)"typeinfo name for GpgME::GpgAddUserIDEditInteractor@Base" 1.7.0
 (c++)"typeinfo name for GpgME::ScdGetInfoAssuanTransaction@Base" 1.7.0
 (c++)"typeinfo name for GpgME::GpgSetExpiryTimeEditInteractor@Base" 1.7.0
 (c++)"typeinfo name for GpgME::GpgSetOwnerTrustEditInteractor@Base" 1.7.0
 (c++)"typeinfo name for GpgME::GpgAgentGetInfoAssuanTransaction@Base" 1.7.0
 (c++)"typeinfo name for GpgME::Context@Base" 1.7.0
 (c++)"typeinfo name for GpgME::Exception@Base" 1.7.0
 (c++)"typeinfo name for GpgME::TrustItem@Base" 1.7.0
 (c++)"typeinfo name for void (*)(_gpgme_key*)@Base" 1.7.0
 (c++)"typeinfo name for void (*)(gpgme_context*)@Base" 1.7.0
 (c++)"typeinfo name for void (*)(gpgme_conf_comp*)@Base" 1.7.0
 (c++)"typeinfo name for std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_ptr<GpgME::EngineInfo::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_ptr<GpgME::ImportResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_ptr<GpgME::KeyListResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_ptr<GpgME::SigningResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_ptr<GpgME::VfsMountResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_ptr<GpgME::DecryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_ptr<GpgME::DecryptionResult::Recipient::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_ptr<GpgME::EncryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_ptr<GpgME::VerificationResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_ptr<GpgME::KeyGenerationResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_ptr<GpgME::Data::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_ptr<GpgME::Notation::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_ptr<GpgME::TofuInfo::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_deleter<_gpgme_key*, void (*)(_gpgme_key*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_deleter<gpgme_context*, void (*)(gpgme_context*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"typeinfo name for std::_Sp_counted_deleter<gpgme_conf_comp*, void (*)(gpgme_conf_comp*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for GpgME::EditInteractor@Base" 1.7.0
 (c++)"vtable for GpgME::EventLoopInteractor@Base" 1.7.0
 (c++)"vtable for GpgME::DefaultAssuanTransaction@Base" 1.7.0
 (c++)"vtable for GpgME::GpgSignKeyEditInteractor@Base" 1.7.0
 (c++)"vtable for GpgME::GpgAddUserIDEditInteractor@Base" 1.7.0
 (c++)"vtable for GpgME::ScdGetInfoAssuanTransaction@Base" 1.7.0
 (c++)"vtable for GpgME::GpgSetExpiryTimeEditInteractor@Base" 1.7.0
 (c++)"vtable for GpgME::GpgSetOwnerTrustEditInteractor@Base" 1.7.0
 (c++)"vtable for GpgME::GpgAgentGetInfoAssuanTransaction@Base" 1.7.0
 (c++)"vtable for GpgME::Context@Base" 1.7.0
 (c++)"vtable for GpgME::Exception@Base" 1.7.0
 (c++)"vtable for GpgME::TrustItem@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_ptr<GpgME::EngineInfo::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_ptr<GpgME::ImportResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_ptr<GpgME::KeyListResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_ptr<GpgME::SigningResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_ptr<GpgME::VfsMountResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_ptr<GpgME::DecryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_ptr<GpgME::DecryptionResult::Recipient::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_ptr<GpgME::EncryptionResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_ptr<GpgME::VerificationResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_ptr<GpgME::KeyGenerationResult::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_ptr<GpgME::Data::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_ptr<GpgME::Notation::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_ptr<GpgME::TofuInfo::Private*, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_deleter<_gpgme_key*, void (*)(_gpgme_key*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_deleter<gpgme_context*, void (*)(gpgme_context*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 (c++)"vtable for std::_Sp_counted_deleter<gpgme_conf_comp*, void (*)(gpgme_conf_comp*), std::allocator<void>, (__gnu_cxx::_Lock_policy)2>@Base" 1.7.0
 passphrase_callback@Base 1.7.0
 progress_callback@Base 1.7.0
